Composition over Inheritance
    - Although inheritance is a powerful way to achieve code reuse, it is not always the best tool
      for the job
        - If used inappropriately, it leads to fragile software
    - It is safe to use inheritance within a package, where the subclass and the superclass
      implementations are under the control of the same programmer
    - It is also safe to use inheritance when extending classes specially designed and documented
      for extension
    - Inheriting from an ordinary concrete classes across package boundaries is dangerous
        - Inheritance in this case, is implementation inheritance

Violating of Encapsulation
    - Inheritance violates encapsulation
        - Subclass depends on the implementation details of its superclass for its proper function
        - If the implementation of the superclass changes, the subclass may break, even though its
          code has not being touched
        - Subclass must evolve in tandem with its superclass
            - Unless the superclass's author have designed and documented it specifically for the
              purpose of being extended